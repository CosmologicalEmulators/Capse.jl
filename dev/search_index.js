var documenterSearchIndex = {"docs":
[{"location":"api/#API-reference","page":"API","title":"API reference","text":"","category":"section"},{"location":"api/#Capse","page":"API","title":"Capse","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"The most commonly used function from the QuadGK package is the quadgk function, used to compute numerical integrals (by h-adaptive Gauss–Kronrod quadrature):","category":"page"},{"location":"api/","page":"API","title":"API","text":"Capse.CℓEmulator\nCapse.get_Cℓ\nCapse.get_ℓgrid","category":"page"},{"location":"api/#Capse.CℓEmulator","page":"API","title":"Capse.CℓEmulator","text":"w0waCDMCosmology(TrainedEmulator::AbstractTrainedEmulators, ℓgrid::Array,\nInMinMax::Matrix, OutMinMax::Matrix)\n\nTrainedEmulator::AbstractTrainedEmulators, the trained emulator\nℓgrid::Array, the ell-grid the emulator has been trained on.\nInMinMax::Matrix, the Matrix containing the numbers to perform the MinMax normalization of the input features\nOutMinMax::Matrix, the Matrix containing the numbers to perform the MinMax normalization\n\nof the input features\n\n\n\n\n\n","category":"type"},{"location":"api/#Capse.get_Cℓ","page":"API","title":"Capse.get_Cℓ","text":"get_Cℓ(CℓEmulator::AbstractCℓEmulators)\n\nCompute the C_llon the ell-grid the emulator has been trained on.\n\n\n\n\n\n","category":"function"},{"location":"api/#Capse.get_ℓgrid","page":"API","title":"Capse.get_ℓgrid","text":"get_ℓgrid(CℓEmulator::AbstractCℓEmulators)\n\nReturn the ell-grid the emulator has been trained on.\n\n\n\n\n\n","category":"function"},{"location":"#Capse.jl","page":"Home","title":"Capse.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Plots; gr()\nPlots.reset_defaults()\nusing BenchmarkTools\ndefault(palette = palette(:tab10))\nbenchmark = BenchmarkTools.load(\"./assets/capse_benchmark.json\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Capse.jl is a Julia package designed to emulate the computation of the CMB Angular Power Spectrum, with a speedup of several orders of magnitude.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In order to install  Capse.jl, run on the Julia REPL","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg, Pkg.add(url=\"https://github.com/CosmologicalEmulators/Capse.jl\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In order to use Capse.jl you need a trained emulator (some of them can be found on Zenodo). After loading a trained CℓTT_emu, feed it some input parameters x.","category":"page"},{"location":"","page":"Home","title":"Home","text":"import Capse\nx = rand(6) # generate some random input\nCapse.get_Cℓ(x, CℓTT_emu) #compute the TT angular spectrum","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nIn this moment the API is not stable: we need to pass the input cosmological parameters in an hardcoded way. We are working to add a more stable and flexible API.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This computation is quite fast: a benchmark performed locally, with a 12th Gen Intel® Core™ i7-1260P, gives the following result","category":"page"},{"location":"","page":"Home","title":"Home","text":"benchmark[1][\"Capse\"][\"Cl\"] # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"Considering that a high-precision settings calculation performed with CAMB on the same machine requires around 60 seconds, Capse.jl is around 1000000 times faster.","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Marco Bonici, INAF - Institute of Space Astrophysics and Cosmic Physics (IASF), Milano\nFederico Bianchini, PostDoctoral researcher at Stanford\nJaime Ruiz-Zapatero, PhD Student at Oxford","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please make sure to update tests as appropriate.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Effort is licensed under the MIT \"Expat\" license; see LICENSE for the full license text.","category":"page"}]
}
